
 From Indi Constructor : 

 Loading core library

 From Indi Constructor : 
Making a calibrator object from Indi 
 ========================================================
 ImageListMaker: Getting a list of images in images folder
 ImageListMaker: You have to ensure manually the existence of 8x6 squares in the images.
 ImageListMaker: Checking if image directory  exists along side src folder and is not a file.
 ImageListMaker: Image directory images exists along side src folder and is not a file.
 ImageListMaker: File num 0 = 000001.jpg is a jpg image file; true
 ImageListMaker: File num 1 = 000002.jpg is a jpg image file; true
 ImageListMaker: File num 2 = 000003.jpg is a jpg image file; true
 ImageListMaker: File num 3 = 000004.jpg is a jpg image file; true
 ImageListMaker: File num 4 = 000005.jpg is a jpg image file; true
 ImageListMaker: File num 5 = 000006.jpg is a jpg image file; true
 ImageListMaker: File num 6 = 000007.jpg is a jpg image file; true
 ImageListMaker: File num 7 = 000008.jpg is a jpg image file; true
 ImageListMaker: File num 8 = 000009.jpg is a jpg image file; true
 ImageListMaker: File num 9 = 000010.jpg is a jpg image file; true
 ImageListMaker: File num 13 = reprojected_0.jpg is a jpg image file; true
 ImageListMaker: File num 13 = reprojected_0.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_0.jpg
 ImageListMaker: File num 14 = reprojected_1.jpg is a jpg image file; true
 ImageListMaker: File num 14 = reprojected_1.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_1.jpg
 ImageListMaker: File num 15 = reprojected_2.jpg is a jpg image file; true
 ImageListMaker: File num 15 = reprojected_2.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_2.jpg
 ImageListMaker: File num 16 = reprojected_3.jpg is a jpg image file; true
 ImageListMaker: File num 16 = reprojected_3.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_3.jpg
 ImageListMaker: File num 17 = reprojected_4.jpg is a jpg image file; true
 ImageListMaker: File num 17 = reprojected_4.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_4.jpg
 ImageListMaker: File num 18 = reprojected_5.jpg is a jpg image file; true
 ImageListMaker: File num 18 = reprojected_5.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_5.jpg
 ImageListMaker: File num 19 = reprojected_6.jpg is a jpg image file; true
 ImageListMaker: File num 19 = reprojected_6.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_6.jpg
 ImageListMaker: File num 20 = reprojected_7.jpg is a jpg image file; true
 ImageListMaker: File num 20 = reprojected_7.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_7.jpg
 ImageListMaker: File num 21 = reprojected_8.jpg is a jpg image file; true
 ImageListMaker: File num 21 = reprojected_8.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_8.jpg
 ImageListMaker: File num 22 = reprojected_9.jpg is a jpg image file; true
 ImageListMaker: File num 22 = reprojected_9.jpg is a reprojeccted jpg image file; 
 ImageListMaker: Attempting to delete file .//images//shadowScan//reprojected_9.jpg
 ImageListMaker: Image directory images exists along side src folder and is not a file.
 ImageListMaker: File num 0 = 000001.jpg is a jpg image file; true
 ImageListMaker: File num 1 = 000002.jpg is a jpg image file; true
 ImageListMaker: File num 2 = 000003.jpg is a jpg image file; true
 ImageListMaker: File num 3 = 000004.jpg is a jpg image file; true
 ImageListMaker: File num 4 = 000005.jpg is a jpg image file; true
 ImageListMaker: File num 5 = 000006.jpg is a jpg image file; true
 ImageListMaker: File num 6 = 000007.jpg is a jpg image file; true
 ImageListMaker: File num 7 = 000008.jpg is a jpg image file; true
 ImageListMaker: File num 8 = 000009.jpg is a jpg image file; true
 ImageListMaker: File num 9 = 000010.jpg is a jpg image file; true
 ImageListMaker: File num 10 = calib_data.mat is not a jpg image file; false
 ImageListMaker: File num 11 = calib_data_originalFromShadowScan.mat is not a jpg image file; false
 ImageListMaker: File num 12 = Calib_Results_originalFromShadowScan.m is not a jpg image file; false
 ImageListMaker: Total of 10 files are images in the directory
 ImageListMaker: Putting all the image files in a separate string array
 ImageListMaker: Printing file names of only images of images directory
 ImageListMaker: Image number 1 = 000001.jpg
 ImageListMaker: Image number 2 = 000002.jpg
 ImageListMaker: Image number 3 = 000003.jpg
 ImageListMaker: Image number 4 = 000004.jpg
 ImageListMaker: Image number 5 = 000005.jpg
 ImageListMaker: Image number 6 = 000006.jpg
 ImageListMaker: Image number 7 = 000007.jpg
 ImageListMaker: Image number 8 = 000008.jpg
 ImageListMaker: Image number 9 = 000009.jpg
 ImageListMaker: Image number 10 = 000010.jpg
PreCalibrator: Number of images  = 10
PreCalibrator: Values for shadow scan are hard code. Their parameters will be chosen even if you chose to use your own images.
PreCalibrator: Sloppy coding.
 InputProcessor: Initialising major parameters for calibration by hard coding
 InputProcessor: Ideally it would have to be read in from the xml file
 InputProcessor: For explanation of each parameter, look at xmlInput_try1 file in the images folder
 InputProcessor:  Value of xmlParameter_BoardSize_Width                          = 8
 InputProcessor:  Value of xmlParameter_BoardSize_Height                         = 6
 InputProcessor:  Value of xmlParameter_Square_Size                              = 0.03
 InputProcessor:  Value of xmlParameter_Calibrate_Pattern                        = CHESSBOARD
 InputProcessor:  Value of xmlParameter_Calibrate_NrOfFrameToUse                 = 10
 InputProcessor:  Value of xmlParameter_Calibrate_FixAspectRatio                 = true
 InputProcessor:  Value of xmlParameter_Calibrate_AssumeZeroTangentialDistortion = true
 InputProcessor:  Value of xmlParameter_Calibrate_FixPrincipalPointAtTheCenter   = true
 InputProcessor:  Value of xmlParameter_Write_DetectedFeaturePoints              = true
 InputProcessor:  Value of xmlParameter_Write_extrinsicParameters                = true
 InputProcessor:  Value of xmlParameter_Write_outputFileName                     = ./images/outputOfPreCalibrator_shadowScan.txt
 InputProcessor:  Value of xmlParameter_Show_UndistortedImage                    = true
 InputProcessor:  Value of xmlParameter_Input_FlipAroundHorizontalAxis           = false
 ======================================================
 ImagePointsIdentifier: Get the corners from each image, estimated Accurately
 ImagePointsIdentifier: Important *** Make sure size is column x row. not row x column
 ImagePointsIdentifier: Using the size 8x6
 ImagePointsIdentifier: Search window size in pixels 11x11
 ImagePointsIdentifier: Omit window size in pixels -1x-1
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000001.jpg
 ImagePointsIdentifier: Getting good corners from image 0, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000002.jpg
 ImagePointsIdentifier: Getting good corners from image 1, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000003.jpg
 ImagePointsIdentifier: Getting good corners from image 2, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000004.jpg
 ImagePointsIdentifier: Getting good corners from image 3, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000005.jpg
 ImagePointsIdentifier: Getting good corners from image 4, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000006.jpg
 ImagePointsIdentifier: Getting good corners from image 5, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000007.jpg
 ImagePointsIdentifier: Getting good corners from image 6, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000008.jpg
 ImagePointsIdentifier: Getting good corners from image 7, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000009.jpg
 ImagePointsIdentifier: Getting good corners from image 8, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Getting approximate image points in image : .//images//shadowScan//000010.jpg
 ImagePointsIdentifier: Getting good corners from image 9, upto subpixel resolution
  ImagePointsIdentifier: Got the corners from each image, in the foundCorners array itself.
 ImagePointsIdentifier:  Print the identified corners of image number  = ?
 ImagePointsIdentifier:  Image number 0 has 1x48 number of points
 ImagePointsIdentifier:  Image number 1 has 1x48 number of points
 ImagePointsIdentifier:  Image number 2 has 1x48 number of points
 ImagePointsIdentifier:  Image number 3 has 1x48 number of points
 ImagePointsIdentifier:  Image number 4 has 1x48 number of points
 ImagePointsIdentifier:  Image number 5 has 1x48 number of points
 ImagePointsIdentifier:  Image number 6 has 1x48 number of points
 ImagePointsIdentifier:  Image number 7 has 1x48 number of points
 ImagePointsIdentifier:  Image number 8 has 1x48 number of points
 ImagePointsIdentifier:  Image number 9 has 1x48 number of points
PreCalibrator: Obtained the accurate image points, size = 10
 ReprojectCorners : Cols = 8
 ReprojectCorners : Rows = 6
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 0
 ReprojectCorners : Loading the image = .//images//shadowScan//000001.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000001.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_0.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 1
 ReprojectCorners : Loading the image = .//images//shadowScan//000002.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000002.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_1.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 2
 ReprojectCorners : Loading the image = .//images//shadowScan//000003.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000003.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_2.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 3
 ReprojectCorners : Loading the image = .//images//shadowScan//000004.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000004.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_3.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 4
 ReprojectCorners : Loading the image = .//images//shadowScan//000005.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000005.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_4.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 5
 ReprojectCorners : Loading the image = .//images//shadowScan//000006.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000006.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_5.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 6
 ReprojectCorners : Loading the image = .//images//shadowScan//000007.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000007.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_6.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 7
 ReprojectCorners : Loading the image = .//images//shadowScan//000008.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000008.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_7.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 8
 ReprojectCorners : Loading the image = .//images//shadowScan//000009.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000009.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_8.jpg
 ReprojectCorners : ===============================================
 ReprojectCorners : Checking the identified image points on image 9
 ReprojectCorners : Loading the image = .//images//shadowScan//000010.jpg
 ReprojectCorners : Corners of the im .//images//shadowScan//000010.jpg size = 1x48
 ReprojectCorners : Completed drawing the detected corners on the  image
 ReprojectCorners : Completed drawing the detected corners in.//images//shadowScan//reprojected_9.jpg
 GenerateChessBoardWorldCorners :  ======================================================
 GenerateChessBoardWorldCorners :  Generating the positions of the corners of the squares in the world plane
 GenerateChessBoardWorldCorners :  The chess board corners are in a 2d plane , with each of size 3cm. 
 GenerateChessBoardWorldCorners :  Calculationg locations and putting them in an array first
 GenerateChessBoardWorldCorners :  Making a single column dummy matrix to hold value.
 GenerateChessBoardWorldCorners :  Number of rows = 6
 GenerateChessBoardWorldCorners :  Number of cols = 8
 GenerateChessBoardWorldCorners :  opencv-python-tutoroals.readthedocs.org says that the corners have to be like (0,0),(1,0) and so on.
 GenerateChessBoardWorldCorners :  For these images, origin is at top left. First is x co-ordinate, which goes towards right, and then y coordinate, which goes down.
 GenerateChessBoardWorldCorners :  Put loc [0.0,0.0] at 0
 GenerateChessBoardWorldCorners :  Put loc [0.029999999329447746,0.0] at 1
 GenerateChessBoardWorldCorners :  Put loc [0.05999999865889549,0.0] at 2
 GenerateChessBoardWorldCorners :  Put loc [0.08999999612569809,0.0] at 3
 GenerateChessBoardWorldCorners :  Put loc [0.11999999731779099,0.0] at 4
 GenerateChessBoardWorldCorners :  Put loc [0.14999999105930328,0.0] at 5
 GenerateChessBoardWorldCorners :  Put loc [0.17999999225139618,0.0] at 6
 GenerateChessBoardWorldCorners :  Put loc [0.20999999344348907,0.0] at 7
 GenerateChessBoardWorldCorners :  Put loc [0.0,0.029999999329447746] at 8
 GenerateChessBoardWorldCorners :  Put loc [0.029999999329447746,0.029999999329447746] at 9
 GenerateChessBoardWorldCorners :  Put loc [0.05999999865889549,0.029999999329447746] at 10
 GenerateChessBoardWorldCorners :  Put loc [0.08999999612569809,0.029999999329447746] at 11
 GenerateChessBoardWorldCorners :  Put loc [0.11999999731779099,0.029999999329447746] at 12
 GenerateChessBoardWorldCorners :  Put loc [0.14999999105930328,0.029999999329447746] at 13
 GenerateChessBoardWorldCorners :  Put loc [0.17999999225139618,0.029999999329447746] at 14
 GenerateChessBoardWorldCorners :  Put loc [0.20999999344348907,0.029999999329447746] at 15
 GenerateChessBoardWorldCorners :  Put loc [0.0,0.05999999865889549] at 16
 GenerateChessBoardWorldCorners :  Put loc [0.029999999329447746,0.05999999865889549] at 17
 GenerateChessBoardWorldCorners :  Put loc [0.05999999865889549,0.05999999865889549] at 18
 GenerateChessBoardWorldCorners :  Put loc [0.08999999612569809,0.05999999865889549] at 19
 GenerateChessBoardWorldCorners :  Put loc [0.11999999731779099,0.05999999865889549] at 20
 GenerateChessBoardWorldCorners :  Put loc [0.14999999105930328,0.05999999865889549] at 21
 GenerateChessBoardWorldCorners :  Put loc [0.17999999225139618,0.05999999865889549] at 22
 GenerateChessBoardWorldCorners :  Put loc [0.20999999344348907,0.05999999865889549] at 23
 GenerateChessBoardWorldCorners :  Put loc [0.0,0.08999999612569809] at 24
 GenerateChessBoardWorldCorners :  Put loc [0.029999999329447746,0.08999999612569809] at 25
 GenerateChessBoardWorldCorners :  Put loc [0.05999999865889549,0.08999999612569809] at 26
 GenerateChessBoardWorldCorners :  Put loc [0.08999999612569809,0.08999999612569809] at 27
 GenerateChessBoardWorldCorners :  Put loc [0.11999999731779099,0.08999999612569809] at 28
 GenerateChessBoardWorldCorners :  Put loc [0.14999999105930328,0.08999999612569809] at 29
 GenerateChessBoardWorldCorners :  Put loc [0.17999999225139618,0.08999999612569809] at 30
 GenerateChessBoardWorldCorners :  Put loc [0.20999999344348907,0.08999999612569809] at 31
 GenerateChessBoardWorldCorners :  Put loc [0.0,0.11999999731779099] at 32
 GenerateChessBoardWorldCorners :  Put loc [0.029999999329447746,0.11999999731779099] at 33
 GenerateChessBoardWorldCorners :  Put loc [0.05999999865889549,0.11999999731779099] at 34
 GenerateChessBoardWorldCorners :  Put loc [0.08999999612569809,0.11999999731779099] at 35
 GenerateChessBoardWorldCorners :  Put loc [0.11999999731779099,0.11999999731779099] at 36
 GenerateChessBoardWorldCorners :  Put loc [0.14999999105930328,0.11999999731779099] at 37
 GenerateChessBoardWorldCorners :  Put loc [0.17999999225139618,0.11999999731779099] at 38
 GenerateChessBoardWorldCorners :  Put loc [0.20999999344348907,0.11999999731779099] at 39
 GenerateChessBoardWorldCorners :  Put loc [0.0,0.14999999105930328] at 40
 GenerateChessBoardWorldCorners :  Put loc [0.029999999329447746,0.14999999105930328] at 41
 GenerateChessBoardWorldCorners :  Put loc [0.05999999865889549,0.14999999105930328] at 42
 GenerateChessBoardWorldCorners :  Put loc [0.08999999612569809,0.14999999105930328] at 43
 GenerateChessBoardWorldCorners :  Put loc [0.11999999731779099,0.14999999105930328] at 44
 GenerateChessBoardWorldCorners :  Put loc [0.14999999105930328,0.14999999105930328] at 45
 GenerateChessBoardWorldCorners :  Put loc [0.17999999225139618,0.14999999105930328] at 46
 GenerateChessBoardWorldCorners :  Put loc [0.20999999344348907,0.14999999105930328] at 47
 GenerateChessBoardWorldCorners :  Making multiple copies of the object points array. 
 GenerateChessBoardWorldCorners :  Putting the mat into the page 0 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 1 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 2 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 3 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 4 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 5 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 6 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 7 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 8 of objectpoints list of mats
 GenerateChessBoardWorldCorners :  Putting the mat into the page 9 of objectpoints list of mats
PreCalibrator: Generating world points with rows =  6
PreCalibrator: Generating world points with cols =  8
PreCalibrator: Generating world points with size =  0.03
 ChessBoard9x6calibrator :  ======================================================
 ChessBoard9x6calibrator :  Checking data for the calibrator.
 ChessBoard9x6calibrator :  Number of pages in the imagePoints mat array and the objectPoints mat array have to be same.
 ChessBoard9x6calibrator :  Size of imagePoints in z direction = 10
 ChessBoard9x6calibrator :  Size of objectPoints in z direction = 10
 ChessBoard9x6calibrator :  Number of detected points in each image must be equal to number of object points for the chess board in that image.
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 0 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 0 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 0 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 0 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 1 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 1 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 1 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 1 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 2 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 2 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 2 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 2 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 3 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 3 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 3 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 3 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 4 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 4 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 4 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 4 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 5 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 5 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 5 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 5 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 6 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 6 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 6 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 6 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 7 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 7 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 7 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 7 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 8 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 8 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 8 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 8 is 1.0
 ChessBoard9x6calibrator : Number of points in each image is the height of the array: 
 ChessBoard9x6calibrator : Number of points in image 9 in object side : 48.0
 ChessBoard9x6calibrator : Number of points in image 9 in image  side : 48.0
 ChessBoard9x6calibrator : Points are arranged in 1d array, so width should be one. 
 ChessBoard9x6calibrator : Width of object array for image 9 is 1.0
 ChessBoard9x6calibrator : Width of image  array for image 9 is 1.0
 ChessBoard9x6calibrator :  Comparing the detected corners and object point locaion for first image.
 ChessBoard9x6calibrator :  Rows 6
 ChessBoard9x6calibrator :  Cols 8
Row number =  0 point number = 0 
 ChessBoard9x6calibrator : in row 0, col 0 obj x y z = [0.0 , 0.0 , 0.0]
 ChessBoard9x6calibrator : in row 0, col 0 img x y  = [399.6274 , 544.97784]
 ChessBoard9x6calibrator : in row 0, col 1 obj x y z = [0.03 , 0.0 , 0.0]
 ChessBoard9x6calibrator : in row 0, col 1 img x y  = [434.9379 , 544.886]
 ChessBoard9x6calibrator : in row 0, col 2 obj x y z = [0.06 , 0.0 , 0.0]
 ChessBoard9x6calibrator : in row 0, col 2 img x y  = [470.46344 , 544.9587]
 ChessBoard9x6calibrator : in row 0, col 3 obj x y z = [0.089999996 , 0.0 , 0.0]
 ChessBoard9x6calibrator : in row 0, col 3 img x y  = [505.84775 , 544.80597]
 ChessBoard9x6calibrator : in row 0, col 4 obj x y z = [0.12 , 0.0 , 0.0]
 ChessBoard9x6calibrator : in row 0, col 4 img x y  = [541.4135 , 544.79974]
 ChessBoard9x6calibrator : in row 0, col 5 obj x y z = [0.14999999 , 0.0 , 0.0]
 ChessBoard9x6calibrator : in row 0, col 5 img x y  = [577.06824 , 544.73785]
 ChessBoard9x6calibrator : in row 0, col 6 obj x y z = [0.17999999 , 0.0 , 0.0]
 ChessBoard9x6calibrator : in row 0, col 6 img x y  = [612.6778 , 544.6658]
 ChessBoard9x6calibrator : in row 0, col 7 obj x y z = [0.21 , 0.0 , 0.0]
 ChessBoard9x6calibrator : in row 0, col 7 img x y  = [648.2162 , 544.4836]
Row number =  1 point number = 8 
 ChessBoard9x6calibrator : in row 1, col 0 obj x y z = [0.0 , 0.03 , 0.0]
 ChessBoard9x6calibrator : in row 1, col 0 img x y  = [396.67715 , 562.97156]
 ChessBoard9x6calibrator : in row 1, col 1 obj x y z = [0.03 , 0.03 , 0.0]
 ChessBoard9x6calibrator : in row 1, col 1 img x y  = [432.73 , 563.0845]
 ChessBoard9x6calibrator : in row 1, col 2 obj x y z = [0.06 , 0.03 , 0.0]
 ChessBoard9x6calibrator : in row 1, col 2 img x y  = [468.58844 , 562.97015]
 ChessBoard9x6calibrator : in row 1, col 3 obj x y z = [0.089999996 , 0.03 , 0.0]
 ChessBoard9x6calibrator : in row 1, col 3 img x y  = [504.64163 , 563.0528]
 ChessBoard9x6calibrator : in row 1, col 4 obj x y z = [0.12 , 0.03 , 0.0]
 ChessBoard9x6calibrator : in row 1, col 4 img x y  = [540.8358 , 562.94885]
 ChessBoard9x6calibrator : in row 1, col 5 obj x y z = [0.14999999 , 0.03 , 0.0]
 ChessBoard9x6calibrator : in row 1, col 5 img x y  = [576.8999 , 562.8993]
 ChessBoard9x6calibrator : in row 1, col 6 obj x y z = [0.17999999 , 0.03 , 0.0]
 ChessBoard9x6calibrator : in row 1, col 6 img x y  = [613.0701 , 562.9259]
 ChessBoard9x6calibrator : in row 1, col 7 obj x y z = [0.21 , 0.03 , 0.0]
 ChessBoard9x6calibrator : in row 1, col 7 img x y  = [649.0577 , 562.9381]
Row number =  2 point number = 16 
 ChessBoard9x6calibrator : in row 2, col 0 obj x y z = [0.0 , 0.06 , 0.0]
 ChessBoard9x6calibrator : in row 2, col 0 img x y  = [393.722 , 581.7978]
 ChessBoard9x6calibrator : in row 2, col 1 obj x y z = [0.03 , 0.06 , 0.0]
 ChessBoard9x6calibrator : in row 2, col 1 img x y  = [430.29904 , 581.94275]
 ChessBoard9x6calibrator : in row 2, col 2 obj x y z = [0.06 , 0.06 , 0.0]
 ChessBoard9x6calibrator : in row 2, col 2 img x y  = [466.75903 , 582.0411]
 ChessBoard9x6calibrator : in row 2, col 3 obj x y z = [0.089999996 , 0.06 , 0.0]
 ChessBoard9x6calibrator : in row 2, col 3 img x y  = [503.4099 , 582.02594]
 ChessBoard9x6calibrator : in row 2, col 4 obj x y z = [0.12 , 0.06 , 0.0]
 ChessBoard9x6calibrator : in row 2, col 4 img x y  = [540.03784 , 582.2127]
 ChessBoard9x6calibrator : in row 2, col 5 obj x y z = [0.14999999 , 0.06 , 0.0]
 ChessBoard9x6calibrator : in row 2, col 5 img x y  = [576.72797 , 582.1407]
 ChessBoard9x6calibrator : in row 2, col 6 obj x y z = [0.17999999 , 0.06 , 0.0]
 ChessBoard9x6calibrator : in row 2, col 6 img x y  = [613.468 , 581.9883]
 ChessBoard9x6calibrator : in row 2, col 7 obj x y z = [0.21 , 0.06 , 0.0]
 ChessBoard9x6calibrator : in row 2, col 7 img x y  = [650.1834 , 581.7463]
Row number =  3 point number = 24 
 ChessBoard9x6calibrator : in row 3, col 0 obj x y z = [0.0 , 0.089999996 , 0.0]
 ChessBoard9x6calibrator : in row 3, col 0 img x y  = [390.6677 , 600.5371]
 ChessBoard9x6calibrator : in row 3, col 1 obj x y z = [0.03 , 0.089999996 , 0.0]
 ChessBoard9x6calibrator : in row 3, col 1 img x y  = [427.77127 , 600.7035]
 ChessBoard9x6calibrator : in row 3, col 2 obj x y z = [0.06 , 0.089999996 , 0.0]
 ChessBoard9x6calibrator : in row 3, col 2 img x y  = [464.85352 , 600.8638]
 ChessBoard9x6calibrator : in row 3, col 3 obj x y z = [0.089999996 , 0.089999996 , 0.0]
 ChessBoard9x6calibrator : in row 3, col 3 img x y  = [502.17978 , 601.3093]
 ChessBoard9x6calibrator : in row 3, col 4 obj x y z = [0.12 , 0.089999996 , 0.0]
 ChessBoard9x6calibrator : in row 3, col 4 img x y  = [539.23645 , 601.3232]
 ChessBoard9x6calibrator : in row 3, col 5 obj x y z = [0.14999999 , 0.089999996 , 0.0]
 ChessBoard9x6calibrator : in row 3, col 5 img x y  = [576.60394 , 601.73987]
 ChessBoard9x6calibrator : in row 3, col 6 obj x y z = [0.17999999 , 0.089999996 , 0.0]
 ChessBoard9x6calibrator : in row 3, col 6 img x y  = [613.9152 , 601.8657]
 ChessBoard9x6calibrator : in row 3, col 7 obj x y z = [0.21 , 0.089999996 , 0.0]
 ChessBoard9x6calibrator : in row 3, col 7 img x y  = [651.08887 , 601.89197]
Row number =  4 point number = 32 
 ChessBoard9x6calibrator : in row 4, col 0 obj x y z = [0.0 , 0.12 , 0.0]
 ChessBoard9x6calibrator : in row 4, col 0 img x y  = [387.59335 , 621.0807]
 ChessBoard9x6calibrator : in row 4, col 1 obj x y z = [0.03 , 0.12 , 0.0]
 ChessBoard9x6calibrator : in row 4, col 1 img x y  = [425.32388 , 621.3599]
 ChessBoard9x6calibrator : in row 4, col 2 obj x y z = [0.06 , 0.12 , 0.0]
 ChessBoard9x6calibrator : in row 4, col 2 img x y  = [463.0764 , 621.56494]
 ChessBoard9x6calibrator : in row 4, col 3 obj x y z = [0.089999996 , 0.12 , 0.0]
 ChessBoard9x6calibrator : in row 4, col 3 img x y  = [500.80948 , 621.53174]
 ChessBoard9x6calibrator : in row 4, col 4 obj x y z = [0.12 , 0.12 , 0.0]
 ChessBoard9x6calibrator : in row 4, col 4 img x y  = [538.57385 , 621.757]
 ChessBoard9x6calibrator : in row 4, col 5 obj x y z = [0.14999999 , 0.12 , 0.0]
 ChessBoard9x6calibrator : in row 4, col 5 img x y  = [576.42346 , 621.856]
 ChessBoard9x6calibrator : in row 4, col 6 obj x y z = [0.17999999 , 0.12 , 0.0]
 ChessBoard9x6calibrator : in row 4, col 6 img x y  = [614.274 , 621.9051]
 ChessBoard9x6calibrator : in row 4, col 7 obj x y z = [0.21 , 0.12 , 0.0]
 ChessBoard9x6calibrator : in row 4, col 7 img x y  = [652.25867 , 622.0137]
Row number =  5 point number = 40 
 ChessBoard9x6calibrator : in row 5, col 0 obj x y z = [0.0 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 5, col 0 img x y  = [384.47073 , 641.2331]
 ChessBoard9x6calibrator : in row 5, col 1 obj x y z = [0.03 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 5, col 1 img x y  = [422.72723 , 641.82306]
 ChessBoard9x6calibrator : in row 5, col 2 obj x y z = [0.06 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 5, col 2 img x y  = [461.04623 , 642.2234]
 ChessBoard9x6calibrator : in row 5, col 3 obj x y z = [0.089999996 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 5, col 3 img x y  = [499.47043 , 642.46484]
 ChessBoard9x6calibrator : in row 5, col 4 obj x y z = [0.12 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 5, col 4 img x y  = [537.8234 , 642.56805]
 ChessBoard9x6calibrator : in row 5, col 5 obj x y z = [0.14999999 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 5, col 5 img x y  = [576.37976 , 642.8206]
 ChessBoard9x6calibrator : in row 5, col 6 obj x y z = [0.17999999 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 5, col 6 img x y  = [614.9672 , 642.94476]
 ChessBoard9x6calibrator : in row 5, col 7 obj x y z = [0.21 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 5, col 7 img x y  = [653.2995 , 642.96014]
Row number =  6 point number = 48 
 ChessBoard9x6calibrator : in row 6, col 0 obj x y z = [0.21 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 6, col 0 img x y  = [653.2995 , 642.96014]
 ChessBoard9x6calibrator : in row 6, col 1 obj x y z = [0.21 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 6, col 1 img x y  = [653.2995 , 642.96014]
 ChessBoard9x6calibrator : in row 6, col 2 obj x y z = [0.21 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 6, col 2 img x y  = [653.2995 , 642.96014]
 ChessBoard9x6calibrator : in row 6, col 3 obj x y z = [0.21 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 6, col 3 img x y  = [653.2995 , 642.96014]
 ChessBoard9x6calibrator : in row 6, col 4 obj x y z = [0.21 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 6, col 4 img x y  = [653.2995 , 642.96014]
 ChessBoard9x6calibrator : in row 6, col 5 obj x y z = [0.21 , 0.14999999 , 0.0]
 ChessBoard9x6calibrator : in row 6, col 5 img x y  = [653.2995 , 642.96014]
 ChessBoard9x6calibrator :  Important *** Make sure size is column x row. not row x column
 ChessBoard9x6calibrator :  Setting flags.
 ChessBoard9x6calibrator :  Giving a initial guess of the camera matrix
 ChessBoard9x6calibrator :  Guess of camera matrix 
 [615, 0, 325;
 0, 616.9, 246;
 0, 0, 1]
 ChessBoard9x6calibrator :  Giving a initial guess of the distortion matrix
 ChessBoard9x6calibrator :  Guess of distortion matrix 
 [0;
 0;
 0;
 0;
 0]
 ChessBoard9x6calibrator :  Starting the calibrator.
 ChessBoard9x6calibrator :  Calibration completed. 
 ChessBoard9x6calibrator :  Page size of rotation rotation matrices 10
 ChessBoard9x6calibrator :  Page size of translation vectors 10
 ChessBoard9x6calibrator :  First rotation matrix [-1.121096757014511;
 0.02287469588433736;
 0.0136993015481295]
 ChessBoard9x6calibrator :  First translation vector [-0.1122913403450114;
 0.1426999665588418;
 1.744928698780342]
 ChessBoard9x6calibrator :  Camera matrix [2066.501046360635, 0, 532.3506412966929;
 0, 2068.550588286762, 375.609482521255;
 0, 0, 1]
 ChessBoard9x6calibrator :  Distortion coefficients [-0.2099426891448057;
 4.376635081287168;
 0;
 0;
 -66.34715496933372]
 ChessBoard9x6calibrator :  Retrieving physical values from the camera matrix.
 ChessBoard9x6calibrator :  Input image height in pixels.										768.0
 ChessBoard9x6calibrator :  Input image width  in pixels.										1024.0
 ChessBoard9x6calibrator :  Physical width in mm of the sensor.                                0.0
 ChessBoard9x6calibrator :  Physical height in mm of the sensor.                               0.0
 ChessBoard9x6calibrator :  Output field of view in degrees along the horizontal sensor axis.  null
 ChessBoard9x6calibrator :  Output field of view in degrees along the vertical sensor axis.    null
 ChessBoard9x6calibrator :  Focal length of the lens in mm.                                    null
 ChessBoard9x6calibrator :  Principal point in mm.                                             {532.3506412966929, 375.2373246506004}
 ChessBoard9x6calibrator :  f_y/f_x                                                            null
Creating matrices that will hold the reprojected points.
3D object points are being reprojected in to 2D space using the given extrinsic and intrinsic parameters
Creating arrays that will hold the errors
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000001.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000002.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000003.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000004.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000005.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000006.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000007.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000008.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000009.jpg
Computing the error now
Drawing the reprojected points on the original images;
Loading the first image = .//images//shadowScan//000010.jpg
Computing the error now
Average rms error = 0.20048922321160303
